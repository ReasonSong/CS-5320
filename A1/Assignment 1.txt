3.(a)

ALTER TABLE Reserves ADD CONSTRAINT timechk CHECK (startdate <= enddate AND (CASE WHEN startdate = enddate THEN starttime < endtime END) AND EXTRACT (MINUTE FROM starttime) = 0 AND EXTRACT (MINUTE FROM endtime) = 0);


3.(b)
					   
CREATE OR REPLACE FUNCTION reserve_overlap() RETURNS trigger AS $reserve_overlap$
    BEGIN
        IF EXISTS(SELECT * 
		  FROM Reserves 
		  WHERE ((startdate < NEW.startdate 
			OR (startdate = New.startdate AND starttime <= NEW.starttime))
			AND (enddate > New.startdate
			OR (enddate = New.startdate AND endtime >= NEW.starttime))
	      	 )) THEN
	RAISE EXCEPTION 'TIME OVERLAPS';
	END IF;

        IF EXISTS(SELECT * 
		  FROM Reserves 
		  WHERE ((startdate > NEW.startdate 
			OR (startdate = New.startdate AND starttime >= NEW.starttime))
			AND (enddate < New.enddate
			OR (enddate = New.enddate AND endtime <= NEW.endtime))
	      	 )) THEN
	RAISE EXCEPTION 'TIME OVERLAPS';
	END IF;

	RETURN NEW;
    END;
					   
$reserve_overlap$ LANGUAGE plpgsql;

CREATE TRIGGER reserve_overlap BEFORE INSERT OR UPDATE ON Reserves
FOR EACH ROW EXECUTE PROCEDURE reserve_overlap();


3.(c)

CREATE OR REPLACE FUNCTION twelve_hour_max() RETURNS trigger AS $twelve_hour_max$
    BEGIN
	IF NEW.startdate = NEW.enddate AND 
	  (EXTRACT (HOUR FROM NEW.endtime) - EXTRACT (HOUR FROM NEW.starttime) > 12)THEN
	RAISE EXCEPTION 'CANNOT RESERVE MORE THAN 12 HOURS A DAY';
	END IF;

	IF NEW.startdate != NEW.enddate 
	   AND (EXTRACT (HOUR FROM NEW.starttime) < 12 
                OR EXTRACT (HOUR FROM NEW.endtime) > 12) THEN
	RAISE EXCEPTION 'CANNOTT RESERVE MORE THAN 12 HOURS A DAY';
	END IF;

	RETURN NEW;
    END;
					   
$twelve_hour_max$ LANGUAGE plpgsql;

CREATE TRIGGER twelve_hour_max BEFORE INSERT OR UPDATE ON Reserves
FOR EACH ROW EXECUTE PROCEDURE twelve_hour_max();


#TESTCASE#

INSERT INTO Reserves(rid,sid,bid,startdate,starttime,enddate,endtime) VALUES (4,1,1, '20160606','1200','20160607', '1500');


